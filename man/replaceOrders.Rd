% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/replaceOrders.R
\name{replaceOrders}
\alias{replaceOrders}
\title{Change the price of a set of unmatched bets}
\usage{
replaceOrders(marketId, betId, newPrice, sslVerify = TRUE)
}
\arguments{
\item{marketId}{String. The market ID of the bets to be replaced. While many
  bets can be updated in one call, they must be from the same market.}

\item{betId}{vector (strings). The bet IDs of the bets to be replaced- bet
  IDs are displayed (called Ref) on the bet information on the right hand
  side of market page on the betfair desktop site.}

\item{newPrice}{vector (strings). The new price of the original bets (e.g
  "1.01", "2.22","10.0",etc). This parameter needs to be set of quoted
  doubles (see for more information on accepted price doubles (e.g. 2.02 is
  viable, while 10.02 is not))}

\item{sslVerify}{Boolean. This argument defaults to TRUE and is optional. In
  some cases, where users have a self signed SSL Certificate, for example
  they may be behind a proxy server, Betfair will fail login with "SSL
  certificate problem: self signed certificate in certificate chain". If this
  error occurs you may set sslVerify to FALSE. This does open a small
  security risk of a man-in-the-middle intercepting your login credentials.}
}
\value{
If the call is successful, then the function returns "SUCCESS".
  Otherwise, a string indicating the nature of the error is returned.
}
\description{
\url{https://api.developer.betfair.com/services/webapps/docs/display/1smk3cen4v3lu3yomq5qye0ni/replaceOrders}
}
\details{
\code{replaceOrders} changes the price of a specific set of unmatched bets
from the same market.

Important Info: This operation is logically a bulk cancel followed by a bulk
place. The cancel is completed first then the new orders are placed. The new
orders will be placed atomically in that they will all be placed or none will
be placed. In the case where the new orders cannot be placed, the
cancellations will not be rolled back.
}
\section{Note on \code{replaceOrders}}{
 Unlike some other functions that
  utilised data frames, this function converts the input to a JSON-compatible
  format. The JSON output is then converted back to a data frame.
}
\examples{
\dontrun{
Change the price of two bets. The following
variables are for illustrative purposes and don't represent actual Betfair IDs:

updateOrder(marketId = "1.19991480", betId = c("61385423029","61385459133"),
           newPrice = c("1.44","2.02")
           )

Note that if you run this function again (after changing the bet IDs remember,
replaceOrders places new bets), it will return an error (BET_TAKEN_OR_LAPSED),
as the bet price hasn't changed.

Note that, unlike \\code{updateOrders}, \\code{replaceOrders} is an all or
nothing process. One error is sufficient to prevent any replacement across the
entire set of bet IDs.

Another possible error occurs if you input incorrect data. In these scenarios,
no updates will have been processed and "No Data Returned" will be the function
output.
}
}
\seealso{
\code{\link{loginBF}}, which must be executed first. Do NOT use the
  DELAY application key. The DELAY application key does not support price
  data.
}

